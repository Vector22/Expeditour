@import "../abstracts/mixins";
@import "../abstracts/variables";

.row {
    max-width: $grid-max-width;
    // background-color: #ccc;
    // Center a block elt in another block elt
    margin: 0 auto;

    // Select everythings except the last child
    &:not(:last-child) {
        margin-bottom: $grid-gutter-vertical;
    }

    // Make use of clearfix mixin
    @include clearfix;

    // Apply the same style on all col-* elts
    [class^="col-"] {
        // background-color: orangered;
        float: left;

        &:not(:last-child) {
            margin-right: $grid-gutter-horizontal;
        }
    }

    // Style the differents columns
    .col-1-of-2, .col-2-of-4 {
        // The width is [( .col-1-of-2 + .col-2-of-2 ) - gutter-horizontal ] / 2
        width: calc((100% - #{$grid-gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        // The width is [ (3 * .col-1-of-3) - 2 * gutter-horizontal ] / 3
        width: calc((100% - #{2 * $grid-gutter-horizontal}) / 3);
        
    }

    .col-2-of-3 {
        // The width is (2 * .col-1-of-3) + gutter-horizontal
        width: calc((2 * (100% - #{2 * $grid-gutter-horizontal}) / 3) + #{$grid-gutter-horizontal});
    }

    .col-1-of-4 {
        // The width is [ (4 * .col-1-of-4) - 3 * gutter-horizontal ] / 4
        width: calc((100% - #{3 * $grid-gutter-horizontal}) / 4);
        
    }

    .col-3-of-4 {
        // The width is (3 * .col-1-of-4) + 2 * gutter-horizontal
        width: calc((3 * (100% - #{3 * $grid-gutter-horizontal}) / 4) + 2 * #{$grid-gutter-horizontal});
        
    }
}